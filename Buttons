// Ticket.js
import React from 'react';

const Ticket = ({ ticket }) => {
  return (
    <div className="ticket">
      <h3>{ticket.title}</h3>
      <p>ID: {ticket.id}</p>
      <p>Status: {ticket.status}</p>
      {/* Display other ticket details */}
    </div>
  );
};

export default Ticket;
// Column.js
import React from 'react';
import Ticket from './Ticket';

const Column = ({ title, tickets }) => {
  return (
    <div className="column">
      <h2>{title}</h2>
      {tickets.map(ticket => (
        <Ticket key={ticket.id} ticket={ticket} />
      ))}
    </div>
  );
};

export default Column;
// Board.js
import React from 'react';
import Column from './Column';

const Board = ({ groupedTickets }) => {
  return (
    <div className="board">
      {/* Loop through grouped tickets and create columns */}
      {Object.entries(groupedTickets).map(([groupTitle, tickets]) => (
        <Column key={groupTitle} title={groupTitle} tickets={tickets} />
      ))}
    </div>
  );
};

export default Board;
// App.js (Updated)
import React, { useState, useEffect } from 'react';
import Board from './Board';
import './App.css'; // Import your CSS file here

function App() {
  const [tickets, setTickets] = useState([]);
  const [groupingOption, setGroupingOption] = useState('status');
  const [sortingOption, setSortingOption] = useState('priority');

  // Fetch data from the API
  useEffect(() => {
    // Fetch data from the API and set the 'tickets' state
    // Example fetch:
    fetch('https://api.quicksell.co/v1/internal/frontend-assignment')
      .then(response => response.json())
      .then(data => {
        setTickets(data.tickets);
      })
      .catch(error => {
        console.error('Error fetching data:', error);
      });
  }, []);

  // Group tickets based on selected grouping option
  const groupedTickets = () => {
    // Implement logic to group tickets based on 'groupingOption'
    // Return grouped tickets
  };

  // Sort tickets based on selected sorting option
  const sortedTickets = () => {
    // Implement logic to sort tickets based on 'sortingOption'
    // Return sorted tickets
  };

  return (
    <div className="App">
      {/* Create components for buttons/dropdowns to select grouping and sorting options */}
      {/* Display Kanban board with grouped and sorted tickets */}
      <Board groupedTickets={groupedTickets()} />
    </div>
  );
}

export default App;
